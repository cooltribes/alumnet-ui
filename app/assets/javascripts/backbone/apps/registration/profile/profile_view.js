// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.AlumNet.module('RegistrationApp.Profile', function(Profile, AlumNet, Backbone, Marionette, $, _) {
  var _ref;
  this.AlumNet = AlumNet;
  return Profile.Form = (function(_super) {
    __extends(Form, _super);

    function Form() {
      _ref = Form.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Form.prototype.template = 'registration/profile/templates/form';

    Form.prototype.className = 'container-fluid';

    Form.prototype.initialize = function() {
      /*Backbone.Validation.bind this,
        valid: (view, attr, selector) ->
          $el = view.$("[name=#{attr}]")
          $group = $el.closest('.form-group')
          $group.removeClass('has-error')
          $group.find('.help-block').html('').addClass('hidden')
        invalid: (view, attr, error, selector) ->
          $el = view.$("[name=#{attr}]")
          $group = $el.closest('.form-group')
          $group.addClass('has-error')
          $group.find('.help-block').html(error).removeClass('hidden')
          events:
      "click button.js-submit":"submitClicked"
      "change #group-avatar":"previewImage"
      */

    };

    Form.prototype.submitClicked = function(e) {
      var data, file, formData;
      e.preventDefault();
      formData = new FormData();
      data = Backbone.Syphon.serialize(this);
      _.forEach(data, function(value, key, list) {
        return formData.append(key, value);
      });
      file = this.$('#group-avatar');
      formData.append('avatar', file[0].files[0]);
      this.model.set(data);
      return this.trigger("form:submit", this.model, formData);
    };

    Form.prototype.previewImage = function(e) {
      var input, preview, reader;
      input = this.$('#group-avatar');
      preview = this.$('#preview-avatar');
      if (input[0] && input[0].files[0]) {
        reader = new FileReader();
        reader.onload = function(e) {
          return preview.attr("src", e.target.result);
        };
        return reader.readAsDataURL(input[0].files[0]);
      }
    };

    return Form;

  })(Marionette.ItemView);
});
